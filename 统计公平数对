给你一个下标从 0 开始、长度为 n 的整数数组 nums ，和两个整数 lower 和 upper ，返回 公平数对的数目 。

如果 (i, j) 数对满足以下情况，则认为它是一个 公平数对 ：

0 <= i < j < n，且
lower <= nums[i] + nums[j] <= upper

提示：

1 <= nums.length <= 105
nums.length == n
-109 <= nums[i] <= 109
-109 <= lower <= upper <= 109


class Solution {
public:
    long long countFairPairs(std::vector<int>& nums, int lower, int upper) {
        if (nums.size() <= 1) return 0;
        long long pop = 0;
        std::sort(nums.begin(), nums.end());
        for (long long j = 1; j < nums.size(); j++) {
            auto left = std::lower_bound(nums.begin(), nums.begin() + j, lower - nums[j]);
            auto right = std::upper_bound(nums.begin(), nums.begin() + j, upper - nums[j]);
            long long qq = right - left;
            pop += qq;
        }
        return pop;
    }
};
    
